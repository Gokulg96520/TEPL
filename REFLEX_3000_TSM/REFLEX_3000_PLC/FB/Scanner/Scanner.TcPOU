<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Scanner" Id="{255a0fc7-4285-4fcb-91b2-a3278a7e1d8a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Scanner
VAR_INPUT
	Acquisition_Status	: Acquisition_Status_Scanner;
	Result_Status		: Result_Status;
	Result_Data_Register: Result_Data_Register;
	Res_Data			: ARRAY[0..MAX_STRING_LENGTH] OF BYTE;
	reset				: BOOL;
END_VAR

VAR_OUTPUT
	Acquisition_Control	: Acquisition_Control_Scanner;
	Result_Control		: Result_Control_Scanner;
	Result_ID           : UINT;
	Read_Done			: BOOL;
	Busy				: BOOL;
	Result				: T_MaxString;
	No_Read				: BOOL;
	Error				: BOOL;
END_VAR

VAR_IN_OUT
	Scan_Start			: BOOL;
END_VAR

VAR
	trigger      : R_TRIG;
	rst		     : R_TRIG;
	okay	     : R_TRIG;
	ack			 : R_TRIG;
	i		     : INT ;
	in		     : ARRAY[0..MAX_STRING_LENGTH] OF BYTE;
	ok		     : BOOL;
	nok		     : BOOL;
	temp	     : UINT;	
	Scanner_Read : INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
trigger(CLK:=Scan_Start);
rst(CLK:=reset);
okay(CLK:=Result_Status.Result_Available);
ack(CLK:=Result_Control.Result_acknowledge);
Busy:=Acquisition_Status.Acquiring;
Error:=Result_Status.Set_When_fault_Occur;

IF NOT Result_Status.Set_When_fault_Occur THEN
	IF NOT Acquisition_Control.Trigger_Enable THEN
		Acquisition_Control.Trigger_Enable:=1;
	END_IF
	IF trigger.Q=TRUE AND Acquisition_Control.Trigger_Enable THEN
		Acquisition_Control.Trigger:=1;
	END_IF
	IF okay.Q THEN
		Acquisition_Control.Trigger:=0;
	END_IF
	Result_ID:=Result_Data_Register.Result_ID;
END_IF

IF Result_Data_Register.Result_code=0 AND Scan_Start THEN
	Result:='';
	No_Read:=TRUE;
	Scan_Start:=0;
	nok:=1;ok:=0;
	Result_Control.Result_Acknowledge:=TRUE;
ELSIF Result_Data_Register.Result_Code=1 AND Scan_Start THEN
	ok:=1;nok:=0;
	Scan_Start:=0;
	temp:=Result_Data_Register.Result_ID;
END_IF

IF Result_Status.Result_available AND ok AND NOT Result_Status.Set_When_fault_Occur  AND NOT Busy AND (temp<>Result_Data_Register.Result_ID) THEN
	FOR i:=0 TO 245 DO
		in[i]:=Res_Data[i];
    END_FOR
	Result:=BYTEARR_TO_MAXSTRING(in:=in);
	No_Read:=FALSE;
	Read_Done:=TRUE;
	temp:=Result_Data_Register.Result_ID;
	Result_Control.Result_acknowledge:=TRUE;
END_IF

IF rst.Q=TRUE OR BUSY THEN
	No_Read:=FALSE;
    Read_Done:=FALSE;
END_IF

IF ack.Q THEN
   Result_Control.Result_acknowledge:=FALSE;
END_IF






]]></ST>
    </Implementation>
    <LineIds Name="Scanner">
      <LineId Id="3" Count="57" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>