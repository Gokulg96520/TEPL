<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="OP10A_AUTO" Id="{4824388d-103d-4731-bb02-a50ea8f0f8b2}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM OP10A_AUTO
VAR	
	OP10A_ROBO_SYSTEM				: FB_Robot;
	OP10A_CYL_IP					: OP10_ORNG_CYL_IP;
	OP10A_CYL_OP					: OP10_ORNG_CYL_OP;
	OP10A_PNP_FB					: OP10_ORING_PNP;
	OP10A_ROBO_PNP_FB				: OP10_ROBO_PNP;
	OP10A_STN_MOVER					: INT;
	OP10A_OUT_ORNG_DN				: BOOL;
	OP10A_AGLE_LH_CMR_TRG			: BOOL;
	OP10A_AGLE_RH_CMR_TRG			: BOOL;	
	OP10A_RDY_TO_PLC_ORNG			: BOOL;
	OP10A_STN_ENABLE				: BOOL;
// TEMPERY


	OP10A_ROBO_MANUAL: BOOL;
	ORING_DN: BOOL;
	tmr: Ton;
	OP10A_PROCESS_DN: BOOL;
	OP10A_PROCESS_DN_: BOOL;
	
	OP10A_PROCESS_DN_TRG: R_TRIG;
	

END_VAR

VAR PERSISTENT
	OP10A_RESULT_UPDATE		: INT;
	OP10A_DELAY_TMR			: OP10_ORNG_CYL_DLY;
AFT_DEG_HME_DLY: TIME;	AFT_DEG_WRK_DLY: TIME;
	AFT_GRP_HME_DLY: TIME;
	AFT_GRP_WRK_DELY: TIME;
	AFT_HORZ_FRW_DELY: TIME;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[OP10A_PNP_FB(
	AUTO:= OP10A_AUTO_RUNNING OR OP10A_STEP_RUNNING, 
	MANUAL:= OP10A_MANUAL_SELECTED, 
	ERROR:= OP10A_ERR, 
	START_ENABLE:= OP10A_START_ENABLE, 
	ROBO_MVED_SFE:= NOT OP10A_Rbt_In_O_Ring_Zone, 
	LH_CMR_OK:= OP10A_LH_CMR_OK AND OP10A_ORNG_RDY_PCK, 
	LH_CMR_NOK:= OP10A_LH_CMR_NOK AND OP10A_ORNG_RDY_PCK, 
	RH_CMR_OK:= OP10A_RH_CMR_OK AND OP10A_ORNG_RDY_PCK, 
	RH_CMR_NOK:= OP10A_RH_CMR_NOK AND OP10A_ORNG_RDY_PCK, 
	ROBO_REACHED:= OP10A_RDY_TO_PLC_ORNG, 
	CYL_INPUTS:= OP10A_CYL_IP, 
	DELY_TIME:= OP10A_DELAY_TMR,
	CONTINOUS_CHECK := OP10A_CYL_PNP_CHECK, 
	O_RING_PLCED=> OP10A_OUT_ORNG_DN, 
	RDY_TO_PICK_ORNG=> OP10A_CYL_RDY_TO_PLC, 
	LH_REJ_DONE=> , 
	RH_REJ_DONE=> , 
	CYL_OUTPUTS=> OP10A_CYL_OP,
	ORNG_PCK_FRM_CNVY := OP10A_ORNG_PCK_DN);

	
	
	
// OP10A AUTO LOGIC CYLINDERS MAPPING 

									(*SENSOR_I/P*)
	OP10A_CYL_IP.DEGREE_0				:=I10A_ORING_ROTRY_CYL_O_DEG_I1011_0;
	OP10A_CYL_IP.DEGREE_180				:=I10A_ORING_ROTRY_CYL_180_DEG_I1011_1;
    OP10A_CYL_IP.HORIZ_CYL_SNR1         :=I10A_ORING_HORZ_CYL_REV_I1011_2;
    OP10A_CYL_IP.HORIZ_CYL_SNR2         :=I10A_ORING_HORZ_CYL_FWD_I1011_3;
    OP10A_CYL_IP.LH_O_GRP_SNR1       	:=I10A_ORING_LH_GRPR_CLSE_I1010_2;
    OP10A_CYL_IP.LH_O_GRP_SNR2          :=I10A_ORING_LH_GRPR_OPN_I1010_3; 
    OP10A_CYL_IP.LH_O_PUSH_SNR1         := NOT I10A_ORING_LH_PUSHR_CYL_REV_I1010_4;
    OP10A_CYL_IP.LH_O_PUSH_SNR2         :=I10A_ORING_LH_PUSHR_CYL_REV_I1010_4;
    OP10A_CYL_IP.LH_REJ_SNR1            :=I10A_LH_FIRTRE_ORING_REJ_CYL_REV_I1011_6;
    OP10A_CYL_IP.LH_REJ_SNR2            :=I10A_LH_FIRTRE_ORING_REJ_CYL_FWD_I1011_7;
	OP10A_CYL_IP.RH_O_GRP_SNR1			:=I10A_ORING_RH_GRPR_CLSE_I1010_6;
    OP10A_CYL_IP.RH_O_GRP_SNR2          :=I10A_ORING_RH_GRPR_OPN_I1010_5;
    OP10A_CYL_IP.RH_O_PUSH_SNR1         := NOT I10A_ORING_RH_PUSHR_CYL_REV_I1010_7;
    OP10A_CYL_IP.RH_O_PUSH_SNR2         :=I10A_ORING_RH_PUSHR_CYL_REV_I1010_7;
    OP10A_CYL_IP.RH_REJ_SNR1            :=I10A_RH_FIRTRE_ORING_REJ_CYL_REV_I1020_0;
    OP10A_CYL_IP.RH_REJ_SNR2            :=I10A_RH_FIRTRE_ORING_REJ_CYL_FWD_I1020_1;
    OP10A_CYL_IP.VERT_CYL_SNR1          :=I10A_ORING_VERT_CYL_UP_I1011_4;
    OP10A_CYL_IP.VERT_CYL_SNR2          :=I10A_ORING_VERT_CYL_DWN_I1011_5;
	
									(*CYLINDER_AUTO_O/P*)	
	
	OP10A_ALL_CYL_HOME_FB				:=OP10A_CYL_OP.ALL_HOME			  ;
	OP10A_O_0DEGRE_AUTOCMD1				:=OP10A_CYL_OP.DEGREE_AUT_CMD1	  ;
	OP10A_O_180DEGRE_AUTOCMD2   		:=OP10A_CYL_OP.DEGREE_AUT_CMD2    ;
	OP10A_O_HORZ_AUTOCMD1    			:=OP10A_CYL_OP.HORIZ_CYL_AUT_CMD1 ;
	OP10A_O_HORZ_AUTOCMD2    			:=OP10A_CYL_OP.HORIZ_CYL_AUT_CMD2 ;
	OP10A_A_O_LHGRIP_ONOFF    			:=OP10A_CYL_OP.LH_O_GRP_VALVE_ON  ;
	OP10A_A_O_LHPUSH_CYL    			:=OP10A_CYL_OP.LH_O_PSH_VALVE_ON  ;
	OP10A_A_O_RHGRIP_ONOFF    			:=OP10A_CYL_OP.RH_O_GRP_VALVE_ON  ;
	OP10A_A_O_RHPUSH_CYL    			:=OP10A_CYL_OP.RH_O_PSH_VALVE_ON  ;
	OP10A_O_VERT_AUTOCMD1    			:=OP10A_CYL_OP.VERT_CYL_AUT_CMD1  ;
	OP10A_O_VERT_AUTOCMD2    			:=OP10A_CYL_OP.VERT_CYL_AUT_CMD2  ;

// 								DELAY_TIMER_FOR_CYLINDER

	OP10A_DELAY_TMR.AFT_DEG_HME_DLY		:= AFT_DEG_HME_DLY;
	OP10A_DELAY_TMR.AFT_DEG_WRK_DLY		:= AFT_DEG_WRK_DLY;
	OP10A_DELAY_TMR.AFT_GRP_HME_DLY		:= AFT_GRP_HME_DLY;
	OP10A_DELAY_TMR.AFT_GRP_WRK_DELY	:= AFT_GRP_WRK_DELY;
	OP10A_DELAY_TMR.AFT_HORZ_FRW_DELY	:= AFT_HORZ_FRW_DELY;
	







	
	
//###############		ROBO	################### 

OP10A_ROBO_PNP_FB(
	AUTO:= OP10A_AUTO_RUNNING OR OP10A_STEP_RUNNING, 
	MANUAL:= OP10A_MANUAL_SELECTED, 
	ERROR:= OP10A_ERR, 
	START_ENABLE:= OP10A_START_ENABLE, 
	ROBO_STATUS_FB:= OP10A_ROBO_STATUS, 
	ROBO_GRP_STUS:= OP10A_GRP_STATUS, 
	BDY1_RDY_PCK:= OP10_LH_CMP_RDY_PCK, 
	BDY2_RDY_PCK:= OP10_RH_CMP_RDY_PCK, 
	BDY1_PCK_BYPAS:= OP10A_BDY1_PCK_BYPAS, 
	BDY2_PCK_BYPAS:= OP10A_BDY2_PCK_BYPAS, 
	O_RNG_NEED:= , 
	PLC_OUTR_ORNG_DN:= OP10A_OUT_ORNG_DN OR ORING_DN, // DELETE ORING_DN
	CMR_RESULT_DN:= OP10A_CMR_DN_RSLT, 
	LH_CMR_ORNG_OK:= OP10A_LH_CMR_OK, 
	RH_CMR_ORING_OK:= OP10A_RH_CMR_OK,
	STN_ENABLE := OP10A_STN_ENABLE,
	OP10_STN_MOVER := OP10A_STN_MOVER,
	START_HOMING := OP10A_START_HOMNG,
	ROBO_IN_HOME := OP10A_Rbt_In_Home,
	STN_MOVER_NUM := OP10A_STN_MOVER,
	LH_BODY_GRIP_HME_DN := OP10A_SRV_LH_BDYGRP_CNT.Axis_In_Home,
	RH_BODY_GRIP_HME_DN := OP10A_SRV_RH_BDYGRP_CNT.Axis_In_Home,
	LH_BODY_ROTRY_HME_DN := OP10A_SRV_LH_BDYANG_CNT.Axis_In_Home,
	RH_BODY_ROTRY_HME_DN := OP10A_SRV_RH_BDYANG_CNT.Axis_In_Home,
	SEC_SING_CYL_SNR1 := OP10_BDY_SING_SEC.Sensor1,
	FRT_SING_CYL_SNR1 := OP10_BDY_SING_FRT.Sensor1,
	CMP_GRIPPED := OP10A_CMP_PRS_ROBO,
	ROBO_GRP_OPN := OP10A_ROBO_Gripper_Open,
	ROBO_IN_ORING_ZONE := OP10A_Rbt_In_O_Ring_Zone,
	ROBO_CTRL_WRD=> OP10A_ROBO_CNTRL, 
	ROBO_GRP_CNTRL=> OP10A_GRP_CNTRL, 
	LH_CAMERA_TRIGGER=> OP10A_AGLE_LH_CMR_TRG, 
	RH_CAMERA_TRIGGER=> OP10A_AGLE_RH_CMR_TRG, 
	PLC_OUTR_ORNG=> OP10A_RDY_TO_PLC_ORNG,
	LH_PART_STATUS => ,
	RH_PART_STATUS => ,
	PROCESS_DONE => ,
	GRIPPER_HOME => OP10A_GRIPPER_HOME,
	OP10_CURR_MOVER => OP10A_CURR_MOVER,
	PROCESS_DONE := OP10A_PROCESS_DN);


	//OP10A_CMR_DN_RSLT			:= TRUE;						// should be deleted
	//OP10A_LH_CMR_OK             := TRUE;						// should be deleted
	//OP10A_RH_CMR_OK             := TRUE;						// should be deleted	


(*tmr(IN:= OP10A_STN_ENABLE, PT:=T#10MS , Q=> , ET=> );
	IF tmr.Q THEN
	IF (MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=0) THEN
	MOVER_CMP_STATUS[OP10A_STN_MOVER][1] := 10;		
	END_IF
	IF (MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=0) THEN
	MOVER_CMP_STATUS[OP10A_STN_MOVER][2] := 10;
	END_IF	
	ALL_STATION_DONE.POSITION_DONE[OP10A_XTS_POS_NO]:= TRUE;
	END_IF*)
	
	CASE OP10A_RESULT_UPDATE OF
		0: IF OP10A_PROCESS_DN THEN
			OP10A_RESULT_UPDATE			:= 5;
		END_IF
		
		5: 	IF OP10A_PROCESS_DN THEN
			IF (MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=0) THEN
			MOVER_CMP_STATUS[OP10A_CURR_MOVER][1] := OP10A_ROBO_PNP_FB.LH_PART_STATUS;		
			END_IF
			IF (MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=0) THEN
			MOVER_CMP_STATUS[OP10A_CURR_MOVER][2] := OP10A_ROBO_PNP_FB.RH_PART_STATUS;
			END_IF		
			IF OP10A_PROCESS_DN AND (OP10A_CURR_MOVER = OP10A_STN_MOVER) AND (MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=10 OR MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=11) AND 
		(MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=10 OR MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=11) THEN
			OP10A_RESULT_UPDATE			:= 10;
			END_IF
			END_IF
	
		10:	STATION_DONE[OP10A_CURR_MOVER][OP10A_XTS_POS_NO]			:= TRUE;
			IF 	MOVER_STP_NO[OP10A_CURR_MOVER]<>((OP10A_XTS_POS_NO*10)+1)THEN
			OP10A_CURR_MOVER											:= 0;	
			OP10A_PROCESS_DN											:= FALSE;
			OP10A_RESULT_UPDATE											:= 15;
			END_IF
			
		15: OP10A_PROCESS_DN_TRG(CLK:= OP10A_PROCESS_DN, Q=> );
			IF OP10A_PROCESS_DN_TRG.Q THEN
			OP10A_RESULT_UPDATE											:= 0;	
			END_IF
	END_CASE
	

(*	IF OP10A_PROCESS_DN OR tmr.Q THEN
	IF (MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=0) THEN
	MOVER_CMP_STATUS[OP10A_CURR_MOVER][1] := OP10A_ROBO_PNP_FB.LH_PART_STATUS;		
	END_IF
	IF (MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=0) THEN
	MOVER_CMP_STATUS[OP10A_CURR_MOVER][2] := OP10A_ROBO_PNP_FB.RH_PART_STATUS;
	END_IF	
	END_IF
	IF OP10A_PROCESS_DN AND (OP10A_CURR_MOVER = OP10A_STN_MOVER) AND (MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=10 OR MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=11) AND 
		(MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=10 OR MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=11) THEN
	STATION_DONE[OP10A_CURR_MOVER][OP10A_XTS_POS_NO]			:= TRUE;
	IF 	MOVER_STP_NO[OP10A_CURR_MOVER]<>((OP10A_XTS_POS_NO*10)+1)THEN
	OP10A_CURR_MOVER											:= 0;	
	OP10A_PROCESS_DN											:= FALSE;	
	END_IF
	END_IF*)
// #############################		OP10A_ROBO_STATUS_CONTROL		#################################
	
	OP10A_ROBO_STATUS.BDY_PCK_POSITION	  		:= OP10A_ROBO_Gripper_Close AND OP10A_Rbt_In_Pick_Zone;//OP10A_Rbt_In_Pick_Zone
//	OP10A_ROBO_STATUS.BDY_S_PCK_POSITION		:= ;
	OP10A_ROBO_STATUS.BDY_CMR_CHK_POS		  	:= OP10A_Camera_Trigger; 							
//	OP10A_ROBO_STATUS.BDY_S_ORNG_POS		   	:= ;
	OP10A_ROBO_STATUS.BDY_ORNG_PLC_POS	  		:= OP10A_O_Ring_Pick_Pos_Reached AND OP10A_Rbt_In_O_Ring_Zone;//OP10A_Rbt_In_O_Ring_Zone
	OP10A_ROBO_STATUS.BDY_MVE_PLC_POS		  	:= OP10A_ROBO_Gripper_Open;//OP10A_Rbt_In_Place_Zone	
	OP10A_ROBO_STATUS.ROBO_SAFE_POS		    	:=  NOT OP10A_Rbt_In_Place_Zone;
	OP10A_ROBO_STATUS.ROBO_REJ_POS				:= OP10A_Rbt_In_Reject_Zone;

	OP10A_A_BODY_READY_TO_PICK					:= 	OP10A_ROBO_CNTRL.BDY_PCK_POSITION	;	
//	                                      	 	:=  OP10A_ROBO_CNTRL.BDY_S_PCK_POSITION;	    
	OP10A_A_PICK_PART_OK                   		:=  OP10A_ROBO_CNTRL.BDY_CMR_CHK_POS		;
//					                      		:= 	OP10A_ROBO_CNTRL.BDY_S_ORNG_POS		;    
	OP10A_A_CAMERA_OK                      		:= 	OP10A_ROBO_CNTRL.BDY_ORNG_PLC_POS OR OP10A_ROBO_CNTRL.BDY_MVE_PLC_POS;    
//	                                       		:= 	OP10A_ROBO_CNTRL.ROBO_SAFE_POS		;    
//	                                       		:= 	OP10A_ROBO_CNTRL.ROBO_REJ_POS		;   


// #############################		OP10A_GRIPPER_STATUS_CONTROL		#################################

	OP10A_GRP_STATUS.LH_BDY_GRP_WRK_FB			:= OP10A_A_SRV_LH_GRPWRK_FB	;
	OP10A_GRP_STATUS.LH_BDY_GRP_HOM_FB		    := OP10A_A_SRV_LH_GRPHME_FB	;
	OP10A_GRP_STATUS.RH_BDY_GRP_WRK_FB		    := OP10A_A_SRV_RH_GRPWRK_FB	;
	OP10A_GRP_STATUS.RH_BDY_GRP_HME_FB		    := OP10A_A_SRV_RH_GRPHME_FB	;
	OP10A_GRP_STATUS.LH_BDY_ROTRY_WRK_FB		:= OP10A_SRV_LH_BDYANG_WRK_FB;
	OP10A_GRP_STATUS.LH_BDY_ROTRY_HOM_FB		:= OP10A_SRV_LH_BDYANG_HME_FB;
	OP10A_GRP_STATUS.RH_BDY_ROTRY_WRK_FB		:= OP10A_SRV_RH_BDYANG_WRK_FB;
	OP10A_GRP_STATUS.RH_BDY_ROTRY_HME_FB		:= OP10A_SRV_RH_BDYANG_HME_FB;
	OP10A_GRP_STATUS.RH_BDY_ROTRY_ZERO_FB		:= OP10A_SRV_RH_BDYANG_ZERO_FB;
	OP10A_GRP_STATUS.LH_BDY_ROTRY_ZERO_FB		:= OP10A_SRV_LH_BDYANG_ZERO_FB;	
	OP10A_GRP_STATUS.RH_BDY_ROTRY_CMR_FB		:= OP10A_SRV_RH_BDYANG_CMR_FB;
	OP10A_GRP_STATUS.RH_BDY_RTRY_FITEE_FB		:= OP10A_SRV_RH_BDYANG_FITRE_FB;
	OP10A_GRP_STATUS.LH_BDY_ROTRY_CMR_FB		:= OP10A_SRV_LH_BDYANG_CMR_FB;	
	OP10A_GRP_STATUS.LH_BDY_RTRY_FITEE_FB		:= OP10A_SRV_LH_BDYANG_FITRE_FB;

	OP10A_A_SRV_LH_GRPWRK						:= OP10A_GRP_CNTRL.LH_BODY_GRIP_WRK	;
	OP10A_A_SRV_LH_GRPHME	        			:= OP10A_GRP_CNTRL.LH_BODY_GRIP_HOM;
	OP10A_A_SRV_RH_GRPWRK	        			:= OP10A_GRP_CNTRL.RH_BODY_GRIP_WRK	;  
	OP10A_A_SRV_RH_GRPHME	        			:= OP10A_GRP_CNTRL.RH_BODY_GRIP_HME	;
	OP10A_SRV_LH_BDYANG_WRK	        			:= OP10A_GRP_CNTRL.LH_BODY_ROTRY_WRK;	
	OP10A_SRV_LH_BDYANG_HME	        			:= OP10A_GRP_CNTRL.LH_BODY_ROTRY_HOM ;	
	OP10A_SRV_RH_BDYANG_WRK	        			:= OP10A_GRP_CNTRL.RH_BODY_ROTRY_WRK;	
	OP10A_SRV_RH_BDYANG_HME	        			:= OP10A_GRP_CNTRL.RH_BODY_ROTRY_HME ;	
	OP10A_SRV_LH_BDYANG_CMR						:= OP10A_GRP_CNTRL.LH_BODY_ROTRY_CMR;
	OP10A_SRV_LH_BDYANG_FITRE					:= OP10A_GRP_CNTRL.LH_BODY_RTRY_FITEE;	
	OP10A_SRV_RH_BDYANG_CMR						:= OP10A_GRP_CNTRL.RH_BODY_ROTRY_CMR;
	OP10A_SRV_RH_BDYANG_FITRE					:= OP10A_GRP_CNTRL.RH_BODY_RTRY_FITEE;
	
// STEPPER_NEGATIVE_HOME_METHOD
	                                               
	OP10A_SRV_LH_BDYGRP_CNT.Axis_Home_Cmd		:= OP10A_GRP_CNTRL.LH_BODY_GRIP_HOMING_1 ; 
	OP10A_SRV_RH_BDYGRP_CNT.Axis_Home_Cmd		:= OP10A_GRP_CNTRL.RH_BODY_GRIP_HOMING_1 ; 
	OP10A_SRV_LH_BDYANG_CNT.Axis_Home_Cmd		:= OP10A_GRP_CNTRL.LH_BODY_ROTRY_HOMING_1; 		
	OP10A_SRV_RH_BDYANG_CNT.Axis_Home_Cmd		:= OP10A_GRP_CNTRL.RH_BODY_ROTRY_HOMING_1; 
	
	
//#####################################	ROBO_FB	####################################


OP10A_ROBO_SYSTEM(
	i_b_Operation_Enable_Feedback:= OP10A_Auto_Operation_Enable, 
	i_b_Auto_Enable_Feedback:= OP10A_Mirror_Auto_enable, 
	i_b_Servo_On_Feedback:= OP10A_Servo_ON_OFF_Status, 
	i_b_Servo_Off_Feedback:= OP10A_Mirror_SRVO_Off, 
	i_b_Error_Feedback:= OP10A_H_Error OR OP10A_L_Error, 
	i_b_Program_Start_Enable_Feedback:= OP10A_Program_Execute, 
	i_b_Robo_Stopping_Feedback:= OP10A_Program_Waiting, 
	i_b_Emergency_Pressed_Feedback:= OP10A_During_EMG_Stop, 
	i_b_Auto_Mode_Feedback:= OP10A_Mirror_Auto_enable, 
	i_b_Reset:= Servo_Reset, 
	i_b_RobotAutoManual:= OP10A_AUTO_SELECTED OR OP10A_STEP_SELECTED OR OP10A_MANUAL_SELECTED, 
	i_b_ProgramReset:= OP10A_ROBO_PRGM_RST, 
	o_b_Operation_Enable_Cmd=> OP10A_Operation_Enable, 
	o_b_Auto_Enable_Cmd=> OP10A_Auto_Enable, 
	o_b_Servo_On_Cmd=> OP10A_Servo_ON, 
	o_b_Servo_Off_Cmd=> OP10A_SERVO_OFF, 
	o_b_Error_Reset_Cmd=> OP10A_ERR_RST, 
	o_b_Program_Reset_Cmd=> OP10A_PRGM_RST, 
	o_b_Program_Start_Cmd=> OP10A_Start, 
	o_b_Program_Stop_Cmd=> OP10A_Stop , 
	o_b_RobotAutoManual=> , 
	o_b_Error=> );	
	
	OP10A_STOP2					:=OP10A_Stop;
	WITH_ORING_VARIIENT			:= TRUE;				// NEED TO BE CHECKED FOR NOT ORING VARIENT 
	

//##############################			ROBO		#####################################

	IF (MANUAL_SELECTED AND OP10A_M_BODY_READY_TO_PICK) OR 
		(OP10A_A_BODY_READY_TO_PICK AND NOT OP10B_BODY_READY_TO_PICK AND NOT OP10B_Rbt_In_Pick_Zone) THEN
		OP10A_BODY_READY_TO_PICK						:= TRUE;// BODY COMPONENT READY;
		OP10A_Pick_Zone_Safe							:= (OP10A_A_SRV_LH_GRPHME_FB OR OP10A_BDY1_PCK_BYPAS) AND 
															(OP10A_A_SRV_RH_GRPHME_FB OR OP10A_BDY2_PCK_BYPAS ) AND 
 																OP10_LH_CMP_RDY_PCK AND OP10_RH_CMP_RDY_PCK; 
	ELSE
		OP10A_BODY_READY_TO_PICK						:= FALSE;
		OP10A_Pick_Zone_Safe							:= FALSE;					
	END_IF

	IF (MANUAL_SELECTED AND OP10A_M_PICK_PART_OK) OR OP10A_A_PICK_PART_OK THEN
		OP10A_PICK_PART_OK								:= TRUE;
		OP10A_A_ORING_INSERTION_DONE					:= TRUE;
		OP10A_Gripper_Rotate_Complete					:= TRUE;
		OP10A_Camera_Zone_Safe							:= TRUE;(*(OP10A_SRV_RH_BDYANG_CMR_FB OR OP10A_BDY2_PCK_BYPAS) AND 
															(OP10A_SRV_LH_BDYANG_CMR_FB OR OP10A_BDY1_PCK_BYPAS);*)
	ELSE
		OP10A_PICK_PART_OK								:= FALSE;
		OP10A_Gripper_Rotate_Complete					:= FALSE;
		OP10A_Camera_Zone_Safe							:= FALSE;
		OP10A_A_ORING_INSERTION_DONE					:= FALSE;		
	END_IF

	IF (MANUAL_SELECTED AND OP10A_M_PICK_PART_NOK) OR OP10A_A_PICK_PART_NOK THEN
		OP10A_PICK_PART_NOK								:= TRUE;
	ELSE
		OP10A_PICK_PART_NOK								:= FALSE;		
	END_IF

	IF (MANUAL_SELECTED AND OP10A_M_CAMERA_OK) OR OP10A_A_CAMERA_OK THEN
		OP10A_READY_TO_INSERT_ORING						:= TRUE;
		OP10A_Place_Zone_Safe							:= (OP10A_SRV_LH_BDYANG_WRK_FB OR OP10A_BDY1_PCK_BYPAS) AND 
															(OP10A_SRV_RH_BDYANG_WRK_FB OR OP10A_BDY2_PCK_BYPAS);
		OP10A_ROTATION_COMPLETE							:= TRUE;
		OP10A_O_Ring_Zone_Safe							:=  (OP10A_SRV_LH_BDYANG_FITRE_FB OR OP10A_BDY1_PCK_BYPAS) AND 
															(OP10A_SRV_RH_BDYANG_FITRE_FB OR OP10A_BDY2_PCK_BYPAS) AND 
																OP10A_CYL_RDY_TO_PLC;
		IF OP10A_ROBO_CNTRL.BDY_MVE_PLC_POS	THEN
		OP10A_A_PLACE_IN_CONVEYOR						:= TRUE;
		END_IF
		
		IF OP10A_Camera_Trigger THEN
		OP10A_CAMERA_OK									:= TRUE;	
		END_IF												
			
	ELSE                                            	
		OP10A_CAMERA_OK									:= FALSE;
		OP10A_READY_TO_INSERT_ORING						:= FALSE;
		OP10A_O_Ring_Zone_Safe							:= FALSE;
		OP10A_Place_Zone_Safe							:= FALSE;
		OP10A_A_PLACE_IN_CONVEYOR						:= FALSE;
		OP10A_ROTATION_COMPLETE							:= FALSE;		
	END_IF

	IF (MANUAL_SELECTED AND OP10A_M_CAMERA_NOK) OR OP10A_A_CAMERA_NOK AND OP10A_Camera_Trigger THEN
		OP10A_CAMERA_NOK								:= TRUE;
	ELSE
		OP10A_CAMERA_NOK								:= FALSE;		
	END_IF	    	 
              
 	IF (MANUAL_SELECTED AND OP10A_M_ORING_INSERTION_DONE) OR OP10A_A_ORING_INSERTION_DONE THEN
		OP10A_ORING_INSERTION_DONE						:= TRUE;
	ELSE
		OP10A_ORING_INSERTION_DONE						:= FALSE;		
	END_IF 
   
  	IF (MANUAL_SELECTED AND OP10A_M_PLACE_IN_CONVEYOR) OR OP10A_A_PLACE_IN_CONVEYOR THEN
		OP10A_PLACE_IN_CONVEYOR							:= TRUE;
	ELSE
		OP10A_PLACE_IN_CONVEYOR							:= FALSE;		
	END_IF
   
	OP10A_GRIPPER_OPEN									:= (OP10A_A_SRV_LH_GRPHME_FB OR OP10A_BDY1_PCK_BYPAS )AND (OP10A_A_SRV_RH_GRPHME_FB OR OP10A_BDY2_PCK_BYPAS) AND NOT OP10A_ROBO_Gripper_Close;
	OP10A_GRIPPER_CLOSE									:= (OP10A_A_SRV_LH_GRPWRK_FB OR OP10A_BDY1_PCK_BYPAS)AND (OP10A_A_SRV_RH_GRPWRK_FB OR OP10A_BDY2_PCK_BYPAS) AND OP10A_ROBO_Gripper_Close;

	OP10A_Reject_Zone_Safe								:= NOT OP10B_Rbt_In_Reject_Zone;








//############################		OP10A STATION ENABLE CONDITION		##########################

	OP10A_STN_MOVER					:= MOVER_POSITION[OP10A_XTS_POS_NO];
	IF AUTO_WITH_XTS THEN	
	IF OP10A_STN_MOVER>0 THEN
	IF NOT END_OF_CYCLE THEN
	OP10A_STN_ENABLE				:= MOVER_POS_RECHED[OP10A_STN_MOVER] AND ((MOVER_CMP_STATUS[OP10A_STN_MOVER][1]=0)OR 
										(MOVER_CMP_STATUS[OP10A_STN_MOVER][2]=0)) AND STATION_ENABLE_CONTROL AND NOT 
											(I10A_BDY1_PRSN_MOVER_I1001_3 OR I10A_BDY2_PRSN_MOVER_I1001_4);
	ELSE
	MOVER_CMP_STATUS[OP10A_STN_MOVER][1]					:=5;
	MOVER_CMP_STATUS[OP10A_STN_MOVER][2]					:=5;
	STATION_DONE[OP10A_STN_MOVER][OP10A_XTS_POS_NO]			:= TRUE;
	
	END_IF
	ELSE
	OP10A_STN_ENABLE										:= FALSE;	
	END_IF	
	END_IF
			
	
		

	


]]></ST>
    </Implementation>
    <LineIds Name="OP10A_AUTO">
      <LineId Id="3" Count="12" />
      <LineId Id="463" Count="0" />
      <LineId Id="16" Count="46" />
      <LineId Id="444" Count="1" />
      <LineId Id="454" Count="0" />
      <LineId Id="446" Count="0" />
      <LineId Id="457" Count="0" />
      <LineId Id="459" Count="0" />
      <LineId Id="461" Count="0" />
      <LineId Id="447" Count="6" />
      <LineId Id="443" Count="0" />
      <LineId Id="63" Count="30" />
      <LineId Id="413" Count="0" />
      <LineId Id="549" Count="0" />
      <LineId Id="95" Count="109" />
      <LineId Id="470" Count="1" />
      <LineId Id="205" Count="0" />
      <LineId Id="469" Count="0" />
      <LineId Id="206" Count="8" />
      <LineId Id="475" Count="0" />
      <LineId Id="478" Count="0" />
      <LineId Id="477" Count="0" />
      <LineId Id="474" Count="0" />
      <LineId Id="215" Count="44" />
      <LineId Id="514" Count="0" />
      <LineId Id="584" Count="0" />
      <LineId Id="260" Count="9" />
      <LineId Id="479" Count="0" />
      <LineId Id="270" Count="15" />
      <LineId Id="465" Count="0" />
      <LineId Id="286" Count="1" />
      <LineId Id="466" Count="0" />
      <LineId Id="289" Count="22" />
      <LineId Id="324" Count="11" />
      <LineId Id="342" Count="4" />
      <LineId Id="349" Count="33" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>