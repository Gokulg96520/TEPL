<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="OP10B_AUTO" Id="{806a4307-fa91-45a6-915e-51cec015a9f1}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM OP10B_AUTO
VAR
	OP10B_ROBO_SYSTEM				: FB_Robot;
	OP10B_CYL_IP					: OP10_ORNG_CYL_IP;
	OP10B_CYL_OP					: OP10_ORNG_CYL_OP;
	OP10B_PNP_FB					: OP10_ORING_PNP;
	OP10B_ROBO_PNP_FB				: OP10_ROBO_PNP;
	OP10B_STN_MOVER					: INT;
	OP10B_OUT_ORNG_DN				: BOOL;
	OP10B_AGLE_LH_CMR_TRG			: BOOL;
	OP10B_AGLE_RH_CMR_TRG			: BOOL;	
	OP10B_RDY_TO_PLC_ORNG			: BOOL;
	OP10B_STN_ENABLE				: BOOL;
	OP10B_ROBO_INZI_DN				: BOOL;	
// TEMPER

	trial: BOOL;
	tmr: Ton;
	alll: BOOL;
	OP10B_PROCESS_DN: BOOL;
	OP10B_RESULT_UPDATE: INT;
	OP10B_PROCESS_DN_TRG: R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[OP10B_PNP_FB(
	AUTO:= OP10B_AUTO_RUNNING OR OP10B_STEP_RUNNING, 
	MANUAL:= OP10B_MANUAL_SELECTED, 
	ERROR:= OP10B_ERR, 
	START_ENABLE:= OP10B_START_ENABLE, 
	ROBO_MVED_SFE:= NOT OP10B_Rbt_In_O_Ring_Zone , 
	LH_CMR_OK:= OP10B_LH_CMR_OK AND OP10B_ORNG_RDY_PCK, 
	LH_CMR_NOK:= OP10B_LH_CMR_NOK AND OP10B_ORNG_RDY_PCK, 
	RH_CMR_OK:= OP10B_RH_CMR_OK AND OP10B_ORNG_RDY_PCK, 
	RH_CMR_NOK:= OP10B_RH_CMR_NOK AND OP10B_ORNG_RDY_PCK, 
	ROBO_REACHED:= OP10B_RDY_TO_PLC_ORNG, 
	CYL_INPUTS:= OP10B_CYL_IP,
	CONTINOUS_CHECK := OP10B_CYL_PNP_CHECK, 
	DELY_TIME:= , 
	O_RING_PLCED=> OP10B_OUT_ORNG_DN, 
	RDY_TO_PICK_ORNG=> OP10B_CYL_RDY_TO_PLC, 
	LH_REJ_DONE=> , 
	RH_REJ_DONE=> , 
	CYL_OUTPUTS=> OP10B_CYL_OP,
	ORNG_PCK_FRM_CNVY := OP10B_ORNG_PCK_DN);

	

// OP10B AUTO LOGIC CYLINDERS MAPPING 

									(*SENSOR_I/P*)
	OP10B_CYL_IP.DEGREE_0				:=I10B_ORING_ROTRY_CYL_O_DEG_I1031_0;
	OP10B_CYL_IP.DEGREE_180				:=I10B_ORING_ROTRY_CYL_180_DEG_I1031_1;
    OP10B_CYL_IP.HORIZ_CYL_SNR1         :=I10B_ORING_HORZ_CYL_REV_I1031_2;
    OP10B_CYL_IP.HORIZ_CYL_SNR2         :=I10B_ORING_HORZ_CYL_FWD_I1031_3;
    OP10B_CYL_IP.LH_O_GRP_SNR1       	:=I10B_ORING_LH_GRPR_CLSE_I1030_2;
    OP10B_CYL_IP.LH_O_GRP_SNR2          :=I10B_ORING_LH_GRPR_OPN_I1030_3;
    OP10B_CYL_IP.LH_O_PUSH_SNR1         :=NOT I10B_ORING_LH_PUSHR_CYL_REV_I1030_4;
    OP10B_CYL_IP.LH_O_PUSH_SNR2         :=I10B_ORING_LH_PUSHR_CYL_REV_I1030_4;
    OP10B_CYL_IP.LH_REJ_SNR1            :=I10B_LH_FIRTRE_ORING_REJ_CYL_REV_I1031_6;
    OP10B_CYL_IP.LH_REJ_SNR2            :=I10B_LH_FIRTRE_ORING_REJ_CYL_FWD_I1031_7;
	OP10B_CYL_IP.RH_O_GRP_SNR1			:=I10B_ORING_RH_GRPR_CLSE_I1030_6 ;
    OP10B_CYL_IP.RH_O_GRP_SNR2          :=I10B_ORING_RH_GRPR_OPN_I1030_5;
    OP10B_CYL_IP.RH_O_PUSH_SNR1         :=NOT I10B_ORING_RH_PUSHR_CYL_REV_I1030_7;
    OP10B_CYL_IP.RH_O_PUSH_SNR2         :=I10B_ORING_RH_PUSHR_CYL_REV_I1030_7;
    OP10B_CYL_IP.RH_REJ_SNR1            :=I10B_RH_FIRTRE_ORING_REJ_CYL_REV_I1040_0;
    OP10B_CYL_IP.RH_REJ_SNR2            :=I10B_RH_FIRTRE_ORING_REJ_CYL_FWD_I1040_1;
    OP10B_CYL_IP.VERT_CYL_SNR1          :=I10B_ORING_VERT_CYL_UP_I1031_4;
    OP10B_CYL_IP.VERT_CYL_SNR2          :=I10B_ORING_VERT_CYL_DWN_I1031_5;
	
									(*CYLINDER_AUTO_O/P*)	
	
	OP10B_ALL_CYL_HOME_FB				:=OP10B_CYL_OP.ALL_HOME			;
	OP10B_O_0DEGRE_AUTOCMD1				:=OP10B_CYL_OP.DEGREE_AUT_CMD1	;
	OP10B_O_180DEGRE_AUTOCMD2   		:=OP10B_CYL_OP.DEGREE_AUT_CMD2    ;
	OP10B_O_HORZ_AUTOCMD1    			:=OP10B_CYL_OP.HORIZ_CYL_AUT_CMD1 ;
	OP10B_O_HORZ_AUTOCMD2    			:=OP10B_CYL_OP.HORIZ_CYL_AUT_CMD2 ;
	OP10B_A_O_LHGRIP_ONOFF    			:=OP10B_CYL_OP.LH_O_GRP_VALVE_ON  ;
	OP10B_A_O_LHPUSH_CYL    			:=OP10B_CYL_OP.LH_O_PSH_VALVE_ON  ;
	OP10B_A_O_RHGRIP_ONOFF    			:=OP10B_CYL_OP.RH_O_GRP_VALVE_ON  ;
	OP10B_A_O_RHPUSH_CYL    			:=OP10B_CYL_OP.RH_O_PSH_VALVE_ON  ;
	OP10B_O_VERT_AUTOCMD1    			:=OP10B_CYL_OP.VERT_CYL_AUT_CMD1  ;
	OP10B_O_VERT_AUTOCMD2    			:=OP10B_CYL_OP.VERT_CYL_AUT_CMD2  ;

//###############		ROBO	###################

OP10B_ROBO_PNP_FB(
	AUTO:= OP10B_AUTO_RUNNING OR OP10B_STEP_RUNNING, 
	MANUAL:= OP10B_MANUAL_SELECTED, 
	ERROR:= OP10B_ERR, 
	START_ENABLE:= OP10B_START_ENABLE, 
	ROBO_STATUS_FB:= OP10B_ROBO_STATUS, 
	ROBO_GRP_STUS:= OP10B_GRP_STATUS, 
	BDY1_RDY_PCK:=OP10_LH_CMP_RDY_PCK , 
	BDY2_RDY_PCK:=OP10_RH_CMP_RDY_PCK , 
	BDY1_PCK_BYPAS:= OP10B_BDY1_PCK_BYPAS, 
	BDY2_PCK_BYPAS:= OP10B_BDY2_PCK_BYPAS, 
	O_RNG_NEED:= , 
	PLC_OUTR_ORNG_DN:= OP10B_OUT_ORNG_DN OR trial, 
	CMR_RESULT_DN:= OP10B_CMR_DN_RSLT, 
	LH_CMR_ORNG_OK:= OP10B_LH_CMR_OK, 
	RH_CMR_ORING_OK:= OP10B_RH_CMR_OK,
	STN_ENABLE := OP10B_STN_ENABLE,
	OP10_STN_MOVER := OP10B_STN_MOVER,
	START_HOMING := OP10B_START_HOMNG,
	ROBO_IN_HOME := OP10B_Rbt_In_Home,
	STN_MOVER_NUM := OP10B_STN_MOVER,
	LH_BODY_GRIP_HME_DN := OP10B_SRV_LH_BDYGRP_CNT.Axis_In_Home,
	RH_BODY_GRIP_HME_DN := OP10B_SRV_RH_BDYGRP_CNT.Axis_In_Home,
	LH_BODY_ROTRY_HME_DN := OP10B_SRV_LH_BDYANG_CNT.Axis_In_Home,
	RH_BODY_ROTRY_HME_DN := OP10B_SRV_RH_BDYANG_CNT.Axis_In_Home,
	SEC_SING_CYL_SNR1 := OP10_BDY_SING_SEC.Sensor1,
	FRT_SING_CYL_SNR1 := OP10_BDY_SING_FRT.Sensor1,
	CMP_GRIPPED := OP10B_CMP_PRS_ROBO,
	ROBO_GRP_OPN := OP10B_ROBO_Gripper_Open,
	ROBO_IN_ORING_ZONE := OP10B_Rbt_In_O_Ring_Zone, 
	ROBO_CTRL_WRD=> OP10B_ROBO_CNTRL, 
	ROBO_GRP_CNTRL=> OP10B_GRP_CNTRL, 
	LH_CAMERA_TRIGGER=> OP10B_AGLE_LH_CMR_TRG, 
	RH_CAMERA_TRIGGER=> OP10B_AGLE_RH_CMR_TRG, 
	PLC_OUTR_ORNG=> OP10B_RDY_TO_PLC_ORNG,
	GRIPPER_HOME => OP10B_GRIPPER_HOME,
	OP10_CURR_MOVER => OP10B_CURR_MOVER,
	PROCESS_DONE := OP10B_PROCESS_DN,
	LH_PART_STATUS => ,
	RH_PART_STATUS => ,
	PROCESS_DONE => );

	OP10B_CMR_DN_RSLT			:= TRUE;						// should be deleted
	OP10B_LH_CMR_OK             := TRUE;						// should be deleted
	OP10B_RH_CMR_OK             := TRUE;						// should be deleted
	
(*tmr(IN:= OP10B_STN_ENABLE, PT:=T#10MS , Q=> , ET=> );
IF tmr.Q THEN
	IF (MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=0) THEN
	MOVER_CMP_STATUS[OP10B_STN_MOVER][1] := 10;		
	END_IF
	IF (MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=0) THEN
	MOVER_CMP_STATUS[OP10B_STN_MOVER][2] := 10;
	END_IF	
	ALL_STATION_DONE.POSITION_DONE[OP10B_XTS_POS_NO]:= TRUE;	
	END_IF*)

	(*IF  OP10B_PROCESS_DN THEN
	IF (MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=0) THEN
	MOVER_CMP_STATUS[OP10B_CURR_MOVER][1] := OP10B_ROBO_PNP_FB.LH_PART_STATUS;		
	END_IF
	IF (MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=0) THEN
	MOVER_CMP_STATUS[OP10B_CURR_MOVER][2] := OP10B_ROBO_PNP_FB.RH_PART_STATUS;
	END_IF	
	END_IF
	IF OP10B_PROCESS_DN AND (OP10B_CURR_MOVER = OP10B_STN_MOVER) AND (MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=10 OR MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=11) AND 
		(MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=10 OR MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=11) THEN
	STATION_DONE[OP10B_CURR_MOVER][OP10B_XTS_POS_NO]			:= TRUE;
	IF 	MOVER_STP_NO[OP10B_CURR_MOVER]<>((OP10B_XTS_POS_NO*10)+1) THEN
	OP10B_CURR_MOVER											:= 0;	
	OP10B_PROCESS_DN											:= FALSE;	
	END_IF
	END_IF*)
	
	
		CASE OP10B_RESULT_UPDATE OF
		0: IF OP10B_PROCESS_DN THEN
			OP10B_RESULT_UPDATE			:= 5;
		END_IF
		
		5: 	IF OP10B_PROCESS_DN THEN
			IF (MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=0) THEN
			MOVER_CMP_STATUS[OP10B_CURR_MOVER][1] := OP10B_ROBO_PNP_FB.LH_PART_STATUS;		
			END_IF
			IF (MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=0) THEN
			MOVER_CMP_STATUS[OP10B_CURR_MOVER][2] := OP10B_ROBO_PNP_FB.RH_PART_STATUS;
			END_IF		
			IF OP10B_PROCESS_DN AND (OP10B_CURR_MOVER = OP10B_STN_MOVER) AND (MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=10 OR MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=11) AND 
		(MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=10 OR MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=11) THEN
			OP10B_RESULT_UPDATE			:= 10;
			END_IF
			END_IF
	
		10:	STATION_DONE[OP10B_CURR_MOVER][OP10B_XTS_POS_NO]			:= TRUE;
			IF 	MOVER_STP_NO[OP10B_CURR_MOVER]<>((OP10B_XTS_POS_NO*10)+1)THEN
			OP10B_CURR_MOVER											:= 0;	
			OP10B_PROCESS_DN											:= FALSE;
			OP10B_RESULT_UPDATE											:= 15;
			END_IF
			
		15: OP10B_PROCESS_DN_TRG(CLK:= OP10B_PROCESS_DN, Q=> );
			IF OP10B_PROCESS_DN_TRG.Q THEN
			OP10B_RESULT_UPDATE											:= 0;	
			END_IF
	END_CASE

	
	
// ###########################			OP10B_ROBO_STATUS_CONTROL	####################################
	
	OP10B_ROBO_STATUS.BDY_PCK_POSITION	  		:= OP10B_ROBO_Gripper_Close AND OP10B_Rbt_In_Pick_Zone;//OP10B_Rbt_In_Pick_Zone
//	OP10B_ROBO_STATUS.BDY_S_PCK_POSITION		:= ;
	OP10B_ROBO_STATUS.BDY_CMR_CHK_POS		  	:= OP10B_Camera_Trigger; 							
//	OP10B_ROBO_STATUS.BDY_S_ORNG_POS		   	:= ;
	OP10B_ROBO_STATUS.BDY_ORNG_PLC_POS	  		:= OP10B_O_Ring_Pick_Pos_Reached AND OP10B_Rbt_In_O_Ring_Zone;//OP10B_Rbt_In_O_Ring_Zone
	OP10B_ROBO_STATUS.BDY_MVE_PLC_POS		  	:= OP10B_ROBO_Gripper_Open;//OP10B_Rbt_In_Place_Zone	
	OP10B_ROBO_STATUS.ROBO_SAFE_POS		    	:= NOT OP10B_Rbt_In_Place_Zone;
	OP10B_ROBO_STATUS.ROBO_REJ_POS				:= OP10B_Rbt_In_Reject_Zone;


	
	OP10B_A_BODY_READY_TO_PICK					:= 	OP10B_ROBO_CNTRL.BDY_PCK_POSITION	;	
//	                                      	 	:=  OP10B_ROBO_CNTRL.BDY_S_PCK_POSITION;	    
	OP10B_A_PICK_PART_OK                   		:=  OP10B_ROBO_CNTRL.BDY_CMR_CHK_POS		;
//					                      		:= 	OP10B_ROBO_CNTRL.BDY_S_ORNG_POS		;    
	OP10B_A_CAMERA_OK                      		:= 	OP10B_ROBO_CNTRL.BDY_ORNG_PLC_POS OR OP10B_ROBO_CNTRL.BDY_MVE_PLC_POS;    
//	                                       		:= 	OP10B_ROBO_CNTRL.ROBO_SAFE_POS		;    
//	                                       		:= 	OP10B_ROBO_CNTRL.ROBO_REJ_POS		;   


//##############################	OP10_GRP_STATUS_CONTROL	################################################

	OP10B_GRP_STATUS.LH_BDY_GRP_WRK_FB			:= OP10B_A_SRV_LH_GRPWRK_FB	;
	OP10B_GRP_STATUS.LH_BDY_GRP_HOM_FB		    := OP10B_A_SRV_LH_GRPHME_FB	;
	OP10B_GRP_STATUS.RH_BDY_GRP_WRK_FB		    := OP10B_A_SRV_RH_GRPWRK_FB	;
	OP10B_GRP_STATUS.RH_BDY_GRP_HME_FB		    := OP10B_A_SRV_RH_GRPHME_FB	;
	OP10B_GRP_STATUS.LH_BDY_ROTRY_WRK_FB		:= OP10B_SRV_LH_BDYANG_WRK_FB;
	OP10B_GRP_STATUS.LH_BDY_ROTRY_HOM_FB		:= OP10B_SRV_LH_BDYANG_HME_FB;
	OP10B_GRP_STATUS.RH_BDY_ROTRY_HME_FB		:= OP10B_SRV_RH_BDYANG_HME_FB;
	OP10B_GRP_STATUS.RH_BDY_ROTRY_WRK_FB		:= OP10B_SRV_RH_BDYANG_WRK_FB;
	OP10B_GRP_STATUS.RH_BDY_ROTRY_ZERO_FB		:= OP10B_SRV_RH_BDYANG_ZERO_FB;
	OP10B_GRP_STATUS.LH_BDY_ROTRY_ZERO_FB		:= OP10B_SRV_LH_BDYANG_ZERO_FB;
	OP10B_GRP_STATUS.RH_BDY_ROTRY_CMR_FB		:= OP10B_SRV_RH_BDYANG_CMR_FB;
	OP10B_GRP_STATUS.RH_BDY_RTRY_FITEE_FB		:= OP10B_SRV_RH_BDYANG_FITRE_FB;
	OP10B_GRP_STATUS.LH_BDY_ROTRY_CMR_FB		:= OP10B_SRV_LH_BDYANG_CMR_FB;	
	OP10B_GRP_STATUS.LH_BDY_RTRY_FITEE_FB		:= OP10B_SRV_LH_BDYANG_FITRE_FB;

	
	OP10B_A_SRV_LH_GRPWRK						:= OP10B_GRP_CNTRL.LH_BODY_GRIP_WRK	;
	OP10B_A_SRV_LH_GRPHME	        			:= OP10B_GRP_CNTRL.LH_BODY_GRIP_HOM	;
	OP10B_A_SRV_RH_GRPWRK	        			:= OP10B_GRP_CNTRL.RH_BODY_GRIP_WRK	;
	OP10B_A_SRV_RH_GRPHME	        			:= OP10B_GRP_CNTRL.RH_BODY_GRIP_HME	;
	OP10B_SRV_LH_BDYANG_WRK	        			:= OP10B_GRP_CNTRL.LH_BODY_ROTRY_WRK;	
	OP10B_SRV_LH_BDYANG_HME	        			:= OP10B_GRP_CNTRL.LH_BODY_ROTRY_HOM ;	
	OP10B_SRV_RH_BDYANG_WRK	        			:= OP10B_GRP_CNTRL.RH_BODY_ROTRY_WRK;	
	OP10B_SRV_RH_BDYANG_HME	        			:= OP10B_GRP_CNTRL.RH_BODY_ROTRY_HME ;	
	OP10B_SRV_LH_BDYANG_CMR						:= OP10B_GRP_CNTRL.LH_BODY_ROTRY_CMR;
	OP10B_SRV_LH_BDYANG_FITRE					:= OP10B_GRP_CNTRL.LH_BODY_RTRY_FITEE;	
	OP10B_SRV_RH_BDYANG_CMR						:= OP10B_GRP_CNTRL.RH_BODY_ROTRY_CMR;
	OP10B_SRV_RH_BDYANG_FITRE					:= OP10B_GRP_CNTRL.RH_BODY_RTRY_FITEE;
	
	
// STEPPER_NEGATIVE_HOME_METHOD
	
	OP10B_SRV_LH_BDYGRP_CNT.Axis_Home_Cmd		:=	OP10B_GRP_CNTRL.LH_BODY_GRIP_HOMING_1 ;
	OP10B_SRV_RH_BDYGRP_CNT.Axis_Home_Cmd	    :=	OP10B_GRP_CNTRL.RH_BODY_GRIP_HOMING_1 ;
	OP10B_SRV_LH_BDYANG_CNT.Axis_Home_Cmd	    :=	OP10B_GRP_CNTRL.LH_BODY_ROTRY_HOMING_1;
	OP10B_SRV_RH_BDYANG_CNT.Axis_Home_Cmd	    :=	OP10B_GRP_CNTRL.RH_BODY_ROTRY_HOMING_1;


//#####################################	ROBO_FB	####################################	                                               

OP10B_ROBO_SYSTEM(
	i_b_Operation_Enable_Feedback:= OP10B_Auto_Operation_Enable, 
	i_b_Auto_Enable_Feedback:= OP10B_Mirror_Auto_enable, 
	i_b_Servo_On_Feedback:= OP10B_Servo_ON_OFF_Status, 
	i_b_Servo_Off_Feedback:= OP10B_Mirror_SRVO_Off, 
	i_b_Error_Feedback:= OP10B_H_Error OR OP10B_L_Error, 
	i_b_Program_Start_Enable_Feedback:= OP10B_Program_Execute, 
	i_b_Robo_Stopping_Feedback:= OP10B_Program_Waiting, 
	i_b_Emergency_Pressed_Feedback:= OP10B_During_EMG_Stop, 
	i_b_Auto_Mode_Feedback:= OP10B_Mirror_Auto_enable, 
	i_b_Reset:= Servo_Reset, 
	i_b_RobotAutoManual:= OP10B_AUTO_SELECTED OR OP10B_STEP_SELECTED OR OP10B_MANUAL_SELECTED, 
	i_b_ProgramReset:= OP10B_ROBO_PRGM_RST, 
	o_b_Operation_Enable_Cmd=> OP10B_Operation_Enable, 
	o_b_Auto_Enable_Cmd=> OP10B_Auto_Enable, 
	o_b_Servo_On_Cmd=> OP10B_Servo_ON, 
	o_b_Servo_Off_Cmd=> OP10B_SERVO_OFF, 
	o_b_Error_Reset_Cmd=> OP10B_ERR_RST, 
	o_b_Program_Reset_Cmd=> OP10B_PRGM_RST, 
	o_b_Program_Start_Cmd=> OP10B_Start, 
	o_b_Program_Stop_Cmd=> OP10B_Stop , 
	o_b_RobotAutoManual=> , 
	o_b_Error=> );	
	
	OP10B_STOP2:=OP10B_Stop;
	WITH_ORING_VARIIENT			:= TRUE; 


/////////////////////////////////////////	OP10B_ROBO	////////////////////////////////////////////////////

	IF (MANUAL_SELECTED AND OP10B_M_BODY_READY_TO_PICK) OR 
		(OP10B_A_BODY_READY_TO_PICK AND NOT OP10A_BODY_READY_TO_PICK AND NOT OP10A_Rbt_In_Pick_Zone )THEN
		OP10B_BODY_READY_TO_PICK						:= TRUE;// BODY COMPONENT READY;
		OP10B_Pick_Zone_Safe							:= (OP10B_A_SRV_LH_GRPHME_FB OR OP10B_BDY1_PCK_BYPAS) AND 
															(OP10B_A_SRV_RH_GRPHME_FB OR OP10B_BDY2_PCK_BYPAS) AND 
															(OP10B_SRV_LH_BDYANG_HME OR OP10B_BDY1_PCK_BYPAS) AND 
															(OP10B_SRV_RH_BDYANG_HME OR OP10B_BDY2_PCK_BYPAS) AND 
																OP10_LH_CMP_RDY_PCK AND OP10_RH_CMP_RDY_PCK;			
	ELSE
		OP10B_BODY_READY_TO_PICK						:= FALSE;
		OP10B_Pick_Zone_Safe							:= FALSE;					
	END_IF

	IF (MANUAL_SELECTED AND OP10B_M_PICK_PART_OK) OR OP10B_A_PICK_PART_OK THEN
		OP10B_PICK_PART_OK								:= TRUE;
		OP10B_A_ORING_INSERTION_DONE					:= TRUE;
		OP10B_Gripper_Rotate_Complete					:= TRUE;
		OP10B_Camera_Zone_Safe							:= TRUE;(*(OP10A_SRV_RH_BDYANG_CMR_FB OR OP10A_BDY2_PCK_BYPAS) AND 
															(OP10A_SRV_LH_BDYANG_CMR_FB OR OP10A_BDY1_PCK_BYPAS);*)
	ELSE
		OP10B_PICK_PART_OK								:= FALSE;
		OP10B_Gripper_Rotate_Complete					:= FALSE;
		OP10B_Camera_Zone_Safe							:= FALSE;
		OP10B_A_ORING_INSERTION_DONE					:= FALSE;		
	END_IF

	IF (MANUAL_SELECTED AND OP10B_M_PICK_PART_NOK) OR OP10B_A_PICK_PART_NOK THEN
		OP10B_PICK_PART_NOK								:= TRUE;
	ELSE
		OP10B_PICK_PART_NOK								:= FALSE;		
	END_IF

	IF (MANUAL_SELECTED AND OP10B_M_CAMERA_OK) OR OP10B_A_CAMERA_OK THEN
		OP10B_READY_TO_INSERT_ORING						:= TRUE;
		OP10B_Place_Zone_Safe							:= (OP10B_SRV_LH_BDYANG_WRK_FB OR OP10B_BDY1_PCK_BYPAS) AND 
															(OP10B_SRV_RH_BDYANG_WRK_FB OR OP10B_BDY2_PCK_BYPAS);
		OP10B_ROTATION_COMPLETE							:= TRUE;
		OP10B_O_Ring_Zone_Safe							:=  (OP10B_SRV_LH_BDYANG_FITRE_FB OR OP10B_BDY1_PCK_BYPAS) AND 
															(OP10B_SRV_RH_BDYANG_FITRE_FB OR OP10B_BDY2_PCK_BYPAS) AND 
																OP10B_CYL_RDY_TO_PLC;

		IF OP10B_ROBO_CNTRL.BDY_MVE_PLC_POS THEN
		OP10B_A_PLACE_IN_CONVEYOR						:= TRUE;			
		END_IF
		
		IF OP10B_Camera_Trigger THEN
		OP10B_CAMERA_OK									:= TRUE;	
		END_IF											
															
	ELSE                                            	
		OP10B_CAMERA_OK									:= FALSE;
		OP10B_READY_TO_INSERT_ORING						:= FALSE;
		OP10B_O_Ring_Zone_Safe							:= FALSE;
		OP10B_Place_Zone_Safe							:= FALSE;
		OP10B_A_PLACE_IN_CONVEYOR						:= FALSE;
		OP10B_ROTATION_COMPLETE							:= FALSE;		
	END_IF

	IF (MANUAL_SELECTED AND OP10B_M_CAMERA_NOK) OR OP10B_A_CAMERA_NOK AND OP10B_Camera_Trigger THEN
		OP10B_CAMERA_NOK								:= TRUE;
	ELSE
		OP10B_CAMERA_NOK								:= FALSE;		
	END_IF	 

 	IF (MANUAL_SELECTED AND OP10B_M_ORING_INSERTION_DONE) OR OP10B_A_ORING_INSERTION_DONE THEN
		OP10B_ORING_INSERTION_DONE						:= TRUE;
	ELSE
		OP10B_ORING_INSERTION_DONE						:= FALSE;		
	END_IF 
   
  	IF (MANUAL_SELECTED AND OP10B_M_PLACE_IN_CONVEYOR) OR OP10B_A_PLACE_IN_CONVEYOR THEN
		OP10B_PLACE_IN_CONVEYOR							:= TRUE;
	ELSE
		OP10B_PLACE_IN_CONVEYOR							:= FALSE;		
	END_IF

	OP10B_GRIPPER_OPEN									:= (OP10B_A_SRV_LH_GRPHME_FB OR OP10B_BDY1_PCK_BYPAS )AND (OP10B_A_SRV_RH_GRPHME_FB OR OP10B_BDY2_PCK_BYPAS) AND NOT OP10B_ROBO_Gripper_Close;
	OP10B_GRIPPER_CLOSE									:= (OP10B_A_SRV_LH_GRPWRK_FB OR  OP10B_BDY1_PCK_BYPAS)AND (OP10B_A_SRV_RH_GRPWRK_FB OR OP10B_BDY2_PCK_BYPAS) AND OP10B_ROBO_Gripper_Close;

	OP10B_Reject_Zone_Safe								:= 1;//NOT OP10A_Rbt_In_Reject_Zone;
	
//############################		OP10B STATION ENABLE CONDITION		##########################

	OP10B_STN_MOVER					:= MOVER_POSITION[OP10B_XTS_POS_NO];

	IF AUTO_WITH_XTS THEN
	IF 	OP10B_STN_MOVER>0 THEN
	IF NOT END_OF_CYCLE THEN		
	OP10B_STN_ENABLE				:= MOVER_POS_RECHED[OP10B_STN_MOVER] AND ((MOVER_CMP_STATUS[OP10B_STN_MOVER][1]=0)OR 
										(MOVER_CMP_STATUS[OP10B_STN_MOVER][2]=0))AND STATION_ENABLE_CONTROL AND NOT 
											(I10B_BDY1_PRSN_MOVER_I1001_5 OR I10B_BDY2_PRSN_MOVER_I1001_6);
  	
  
ELSE
	MOVER_CMP_STATUS[OP10B_STN_MOVER][1]					:=5;
	MOVER_CMP_STATUS[OP10B_STN_MOVER][2]					:=5;
	STATION_DONE[OP10B_STN_MOVER][OP10B_XTS_POS_NO]			:= TRUE;	
	END_IF
	ELSE	
	OP10B_STN_ENABLE				:= FALSE;
	END_IF
	END_IF	






]]></ST>
    </Implementation>
    <LineIds Name="OP10B_AUTO">
      <LineId Id="3" Count="11" />
      <LineId Id="381" Count="0" />
      <LineId Id="15" Count="75" />
      <LineId Id="359" Count="0" />
      <LineId Id="447" Count="0" />
      <LineId Id="92" Count="42" />
      <LineId Id="470" Count="1" />
      <LineId Id="475" Count="29" />
      <LineId Id="472" Count="2" />
      <LineId Id="135" Count="33" />
      <LineId Id="394" Count="3" />
      <LineId Id="169" Count="0" />
      <LineId Id="392" Count="0" />
      <LineId Id="170" Count="7" />
      <LineId Id="400" Count="3" />
      <LineId Id="178" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="179" Count="43" />
      <LineId Id="425" Count="0" />
      <LineId Id="578" Count="1" />
      <LineId Id="554" Count="0" />
      <LineId Id="223" Count="9" />
      <LineId Id="448" Count="0" />
      <LineId Id="233" Count="13" />
      <LineId Id="383" Count="6" />
      <LineId Id="252" Count="34" />
      <LineId Id="390" Count="0" />
      <LineId Id="294" Count="3" />
      <LineId Id="307" Count="9" />
      <LineId Id="528" Count="0" />
      <LineId Id="317" Count="0" />
      <LineId Id="530" Count="0" />
      <LineId Id="529" Count="0" />
      <LineId Id="318" Count="7" />
      <LineId Id="329" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>