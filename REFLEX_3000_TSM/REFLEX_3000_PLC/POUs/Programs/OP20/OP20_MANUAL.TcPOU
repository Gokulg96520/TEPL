<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="OP20_MANUAL" Id="{ad2c7f39-1200-430f-badc-ff1e1fe0aad2}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM OP20_MANUAL
VAR

//	SR20_Vert_servo_ctrl:Servo_Control_1;
	SR20_Vert_servo_Axis :AXIS_REF;

	OP20_LH_OIL_SPIN_M: BOOL;
	OP20_RH_OIL_SPIN_M: BOOL;
	OP20_LH_OIL_SPRAY_M: BOOL;
	OP20_RH_OIL_SPRAY_M: BOOL;
	temp_safe: BOOL;
	temp:BOOL;
	temp_1: BOOL;

	
	error: BOOL;
	fb_initz: BOOL;
	SERVO_LIMIT_WARNING: BOOL;
	
	
	
	// COE READ PARAMETER 
	fbSdoRead  : FB_EcCoESdoRead;
    sNetId     : T_AmsNetId := '192.168.0.1.15.1';
    bExecute   : BOOL;
    nSlaveAddr : UINT := 1002;
    nIndex     : WORD := 16#1018;
    nSubIndex  : BYTE :=1;
    vendorId   : UDINT;
    bError     : BOOL;
    nErrId     : UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// IF MANUAL IS SELECTED 
IF ( MANUAL_SELECTED AND OP20_HMI_ManualMode )AND NOT ERROR_ACTIVE AND OperationEnable THEN
  
    IF OP20_LH_OIL_SPIN_M THEN
	    O20_LH_OIL_SPIN_ON_Q1150_1:=TRUE;
	ELSE 
		O20_LH_OIL_SPIN_ON_Q1150_1:=FALSE;
	END_IF
    IF OP20_RH_OIL_SPIN_M THEN
	    O20_RH_OIL_SPIN_ON_Q1150_3:=TRUE;
	ELSE 
		O20_RH_OIL_SPIN_ON_Q1150_3:=FALSE;
	END_IF	  
	IF OP20_LH_OIL_SPRAY_M THEN
	   O20_LH_OIL_DISPN_ON_Q1150_0:=TRUE;
	   O20_LH_OIL_DISPN_FRL_VLVE_ON_Q401_7:=1;
	ELSE 
	   O20_LH_OIL_DISPN_ON_Q1150_0:=0;
	   O20_LH_OIL_DISPN_FRL_VLVE_ON_Q401_7:=0;
	END_IF
	IF OP20_RH_OIL_SPRAY_M THEN
	   O20_RH_OIL_DISPN_ON_Q1150_2:=TRUE;
	   O20_RH_OIL_DISPN_FRL_VLVE_ON_Q401_5:=1;
	ELSE 
	   O20_RH_OIL_DISPN_ON_Q1150_2:=0;
	   O20_RH_OIL_DISPN_FRL_VLVE_ON_Q401_5:=0;
	END_IF	
	
END_IF

OP20_VERT_SERVO_POSITION := SR20_Vert_servo_ctrl.Actual_Position;
OP20_SERVO_POS_DONE	     := SR20_Vert_servo_ctrl.pos_done ;

OP20_VERT_SERVO_SFE_WRK_POS := OP20_HMI_Safe_Work;
OP20_VERT_SERVO_HME_POS     := OP20_HMI_Safe_Home;
OP20_VERT_SERVO_WRK_POS     := OP20_VERT_SERVO_WORK_POS;

IF In_Range(SR20_Vert_servo_status.actualPosition,OP20_VERT_SERVO_SFE_WRK_POS,1) THEN
	OP20_SERVO_ON_SFE_WRK := TRUE;
ELSE
	OP20_SERVO_ON_SFE_WRK := FALSE;
END_IF

IF In_Range(SR20_Vert_servo_status.actualPosition,OP20_VERT_SERVO_HME_POS,3) THEN
	OP20_SERVO_ON_HOME := TRUE;
ELSE
	OP20_SERVO_ON_HOME := FALSE;
END_IF

IF In_Range(SR20_Vert_servo_status.actualPosition,OP20_VERT_SERVO_WRK_POS,1) THEN
	OP20_SERVO_ON_WRK := TRUE;
ELSE
	OP20_SERVO_ON_WRK := FALSE;
END_IF	

SR20_Vert_servo(
	bAxis1_Ref_Switch:= , 
	bInit:= fb_initz, 
	bErrorReset:=OP20_HMI_Reset OR Servo_Reset , 
	bEnable:= Servo_Enable, 
	bMoveVelocity:= , 
	bHalt:= , 
	bManualMode:= MANUAL_SELECTED AND OP20_ManualSelected ,
	fHomePos:= , 
	fOverride:= , 
	fTargetPosition:=SR20_Vert_servo_ctrl.Position , 
	fTargetVelocity:=SR20_Vert_servo_ctrl.Velocity , 
	fAcc:= , 
	fDec:= ,
	Servo_High_Limit:= OP20_HMI_High_Limit,	
	Servo_Low_Limit:=  OP20_HMI_Low_Limit,	 	
	WARNING_LIMIT:=1,		
	Actual_Torque=> SR20_Vert_servo_ctrl.Actual_Torque ,
	Actual_position=>SR20_Vert_servo_ctrl.Actual_Position ,
    Actual_velocity=>SR20_Vert_servo_ctrl.Actual_Velocity ,
	TORQUE_LIMIT=>,	
	bmove_home:=SR20_Vert_servo_ctrl.Axis_Home_Cmd ,
	baxis_in_home_pos=>SR20_Vert_servo_ctrl.Axis_In_Home ,
	Safe_move_Conditions:=Servo_Safety,
	Axis:= SR20_Vert_servo_Axis , 
	bHome:=SR20_Vert_servo_ctrl.Bsethome ,
	HME_WRITE_ADD:= 16#5001, 
    bSetPosition:=SR20_Vert_servo_ctrl.Bsetpos , 
	bMoveAbsolute:=SR20_Vert_servo_ctrl.ABSmove_Start ,
	bMoveRelative:=SR20_Vert_servo_ctrl.RELmove_Start , 
	bMoveTorque :=SR20_Vert_servo_ctrl.Torque_mode_Start,
	stManualModeAxis:=SR20_Vert_servo_status , 
	sAxisState=>SR20_Vert_servo_ctrl.Axis_State , 
	bAxis_ready=>SR20_Vert_servo_ctrl.Axis_ready , 
	bAxisInPosition=> SR20_Vert_servo_ctrl.Axis_In_Pos, 
	bAxisError=>SR20_Vert_servo_ctrl.Axis_Error , 
	bAxisEnabled=> SR20_Vert_servo_ctrl.Axis_Enabled, 
	bAxisHomed=> SR20_Vert_servo_ctrl.Axis_reference,
	bTorqueReached=> SR20_Vert_servo_ctrl.Trq_reached, 
	bSetPositionDone=>   ,
	bsafe_to_move=> ,
	bABS_Pos_done=> SR20_Vert_servo_ctrl.pos_done , 
	bHaltDone=> ,
	SERVO_LIMIT_WARNING=>SERVO_LIMIT_WARNING, 
	bSTOPDone=> , 
	bHomeDone=> , 
	bDone=> );	
	
IF OP20_ManualSelected AND MANUAL_SELECTED THEN
	SR20_Vert_servo_status.targetVelocity:=50;
END_IF


//COE READ OP 20 VERTICLE MOTOR TEMPERATURE
fbSdoRead(sNetId:= sNetId,nSlaveAddr :=nSlaveAddr, nIndex:=nIndex,
		 nSubIndex :=nSubIndex, pDstBuf:= ADR(vendorId), 
		 cbBufLen:=SIZEOF(vendorId),bExecute:=bExecute);
		 bError:=fbSdoRead.bError;
		 nErrId:=fbSdoRead.nErrId;]]></ST>
    </Implementation>
    <LineIds Name="OP20_MANUAL">
      <LineId Id="3" Count="113" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>