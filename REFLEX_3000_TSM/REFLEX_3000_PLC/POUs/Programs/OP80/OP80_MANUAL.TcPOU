<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="OP80_MANUAL" Id="{7478fdd4-05b5-400e-859c-2aeba5b8271b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM OP80_MANUAL
VAR
	//SR80_Vert_servo_status:stManualModeAxis;
	SR80_Vert_servo_Axis :AXIS_REF;
    temp_safe:BOOL;
	enable:BOOL;
	reset:bool;
	Op80Enable: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// IF MANUAL IS SELECTED 

//SR80_Vert_servo_ctrl.ABSmove_Start:=OP80_VERT_SERVO_STRT;
//OP80_SERVO_POS_DONE:= SR80_Vert_servo_ctrl.pos_done;

IF In_Range(SR80_Vert_servo_status.actualPosition,OP80_VERT_SERVO_SFE_WRK_POS,1) THEN
	OP80_SERVO_ON_SFE_WRK := TRUE;
ELSE
	OP80_SERVO_ON_SFE_WRK := FALSE;
END_IF

IF In_Range(SR80_Vert_servo_status.actualPosition,OP80_VERT_SERVO_HME_POS,1) THEN
	OP80_SERVO_ON_HOME := TRUE;
ELSE
	OP80_SERVO_ON_HOME := FALSE;
END_IF

IF In_Range(SR80_Vert_servo_status.actualPosition,OP80_VERT_SERVO_WRK_POS_1,1) THEN
	OP80_SERVO_ON_WRK_1 := TRUE;
ELSE
	OP80_SERVO_ON_WRK_1 := FALSE;
END_IF

IF In_Range(SR80_Vert_servo_status.actualPosition,OP80_VERT_SERVO_WRK_POS_2,1) THEN
	OP80_SERVO_ON_WRK_2 := TRUE;
ELSE
	OP80_SERVO_ON_WRK_2 := FALSE;
END_IF

OP80_VERT_SERVO_SFE_WRK_POS   :=  OP80_HMI_Safe_Work;
OP80_VERT_SERVO_HME_POS       :=  OP80_HMI_Safe_Home;
OP80_VERT_SERVO_WRK_POS_2     :=  OP80_VERT_SERVO_WORK_POS;
OP80_VERT_SERVO_WRK_POS_1	  := (OP80_VERT_SERVO_WRK_POS_2-OP80_HMI_Servo_Pos_Offset);

SR80_Vert_servo(
	bAxis1_Ref_Switch:= , 
	bInit:= , 
	bErrorReset:= OP80_HMI_Reset OR Servo_Reset , 
	bEnable:= Servo_Enable, 
	bMoveVelocity:= , 
	bHalt:= , 
	bManualMode:=OP80_ManualSelected AND MANUAL_SELECTED , 
	fHomePos:= , 
	fOverride:= , 
	fTargetPosition:=SR80_Vert_servo_ctrl.Position , 
	fTargetVelocity:=SR80_Vert_servo_ctrl.Velocity , 
	fAcc:= , 
	fDec:= , 
	Servo_High_Limit:= OP80_HMI_High_Limit,	
	Servo_Low_Limit:=  OP80_HMI_Low_Limit,	
	Safe_move_Conditions:=Servo_Safety,
	Axis:=SR80_Vert_servo_Axis  , 
	bmove_home:=SR80_Vert_servo_ctrl.Axis_Home_Cmd ,
	baxis_in_home_pos=>SR80_Vert_servo_ctrl.Axis_In_Home ,
	HME_WRITE_ADD:= 16#500F,	
	bHome:=SR80_Vert_servo_ctrl.Bsethome , 
	bSetPosition:=SR80_Vert_servo_ctrl.BsetPos , 
	bMoveAbsolute:=SR80_Vert_servo_ctrl.ABSmove_Start , 
	bMoveRelative:=SR80_Vert_servo_ctrl.RELmove_Start ,
	bMoveTorque :=SR80_Vert_servo_ctrl.Torque_mode_Start,
	stManualModeAxis:=SR80_Vert_servo_status , 
	sAxisState=>SR80_Vert_servo_ctrl.Axis_State , 
	bAxis_ready=>SR80_Vert_servo_ctrl.Axis_ready , 
	bAxisInPosition=> SR80_Vert_servo_ctrl.Axis_In_Pos, 
	bAxisError=>SR80_Vert_servo_ctrl.Axis_Error , 
	bAxisEnabled=> SR80_Vert_servo_ctrl.Axis_Enabled, 
	bAxisHomed=> SR80_Vert_servo_ctrl.Axis_reference, 
	bSetPositionDone=>   ,
    bsafe_to_move=>SR80_Vert_servo_ctrl.Safe_To_Move,  
	bABS_Pos_done=> SR80_Vert_servo_ctrl.pos_done,
	Actual_position=>SR80_Vert_servo_ctrl.Actual_Position ,  
	Actual_velocity=>SR80_Vert_servo_ctrl.Actual_Velocity , 
	Actual_Torque=> SR80_Vert_servo_ctrl.Actual_Torque,	
	bHaltDone=> , 
	bSTOPDone=> , 
	bHomeDone=> , 
	bDone=> );
	
IF MANUAL_SELECTED AND OP80_ManualSelected THEN
	SR80_Vert_servo_status.targetVelocity:=50;	
END_IF

OP80_LH_LVDT_VALUE := DINT_TO_REAL(OP80_LH)/10000;
OP80_RH_LVDT_VALUE := DINT_TO_REAL(OP80_RH)/10000;	
	]]></ST>
    </Implementation>
    <LineIds Name="OP80_MANUAL">
      <LineId Id="3" Count="70" />
      <LineId Id="95" Count="1" />
      <LineId Id="94" Count="0" />
      <LineId Id="74" Count="10" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>